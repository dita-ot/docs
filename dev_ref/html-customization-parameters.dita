<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA 1.3 Task//EN" "task.dtd">
<!--  This file is part of the DITA Open Toolkit project. See the accompanying LICENSE file for applicable license.  -->

<task id="custom-html-parameters">
    <title>Setting parameters for custom HTML</title>
    <titlealts>
        <navtitle>Setting HTML parameters</navtitle>
    </titlealts>
    <shortdesc>For simple branded HTML pages, you can adjust the look and feel of the default output
        to match your company style by setting parameters to include custom CSS, header branding, or
        table-of-contents navigation in topics.</shortdesc>
    <taskbody>
        <context>
            <p>You can include a custom CSS file with the font settings and colors that define your
                corporate identity to modify the default HTML output generated by the DITA Open
                Toolkit. You can also set parameters to add a custom header with your publication
                title or company logo, or embed navigation elements in each page.</p>
            <note type="tip">For an example of HTML output generated using this method, see the
                HTML5 version of the DITA-OT documentation included in the installation folder under
                <filepath>doc/index.html</filepath>.</note>
        </context>
        
    </taskbody>
    <task id="custom-css">
        <title>Custom CSS</title>
        <taskbody>
            <context>Follow the steps below to add a custom stylesheet to your HTML
                output.</context>
            <steps>
                
                <step>
                    <cmd>Create a custom CSS file and store it in your project along with your DITA
                        source files.</cmd>
                    <info>
                        <note>As a starting point, you can use the CSS file that is used for the
                            DITA-OT documentation. This file is available in the installation folder
                            under <filepath>docsrc/resources/dita-ot-doc.css</filepath>.</note>
                    </info>
                </step>
                <step>
                    <cmd>Set the <parmname>args.css</parmname> parameter to the name of your custom
                        CSS file.</cmd>
                    <info>
                        <p>The value of this parameter should be only the file name. Path
                            information is specified with a separate parameter.</p></info>
                </step>
                <step>
                    <cmd>Set the <parmname>args.copycss</parmname> parameter to
                        <option>yes</option>.</cmd>
                    <info>
                        <p>This setting ensures that your custom CSS file will be copied to the
                            output directory.</p></info>
                </step>
                <step>
                    <cmd>Set <parmname>args.cssroot</parmname> to the folder path that contains your
                        custom CSS file.</cmd>
                    <info>
                        <p>The value you enter here will be interpreted relative to the location of
                            the input map file. If your map is stored at the root level of your
                            project folder and the CSS file is stored in a subfolder named
                            <filepath>resources</filepath>, set
                            <parmname>args.cssroot</parmname> to
                            <option>resources</option>.</p></info>
                </step>
                <step importance="optional">
                    <cmd>Set <parmname>args.csspath</parmname> to specify the location of the CSS
                        file in the output folder.</cmd>
                    <info>
                        <p>If <parmname>args.csspath</parmname> is not set, the custom CSS file will
                            be copied to the root level of the output folder. To copy the CSS file
                            to a subfolder named <filepath>css</filepath>, set
                            <parmname>args.csspath</parmname> to
                            <option>css</option>.</p></info>
                </step>
            </steps>
        </taskbody>
    </task>
    <task id="custom-header">
        <title>Custom header</title>
        <taskbody>
            <context>Follow the steps below to add a custom header to your HTML output:</context>
            <steps>
                <step>
                    <cmd>Set <parmname>args.hdr</parmname> to include an XML file as a running
                        header that appears above the page content. </cmd>
                    <info>
                        <p>Header files are commonly used to add publication titles, logos, or other
                            branding elements.</p>
                        <p>In HTML5 output, the contents of the header file will be wrapped in an
                            HTML5 <xmlelement>header</xmlelement> element with the
                            <xmlatt>role</xmlatt> attribute set to <option>banner</option>.</p>
                        <p>For example, the DITA-OT documentation includes a simple header banner
                            with the publication title and a horizontal rule to separate the header
                            from the generated topic content:
                            <codeblock><coderef href="../resources/header.xml"/></codeblock>
                        </p>
                    </info>
                </step>
            </steps>
        </taskbody>
    </task>
    <task id="toc-depth">
        <title>Table of content depth</title>
        <taskbody>
            <context>Follow the steps below to define the presence and depth the table of contents
                in the <xmlelement>nav</xmlelement> element of each page in the HTML5 output, .</context>
            <steps-unordered>
                <step>
                    <cmd>Set the <parmname>nav-toc</parmname> parameter to one of the following
                        options:</cmd>
                    <choices>
                        <choice>The <option>partial</option> option creates a table of contents with
                            the portion of the navigation hierarchy that contains the current topic
                            (along with its parents, siblings and children).</choice>
                        <choice>The <option>full</option> option embeds the complete navigation for
                            the entire map in each topic.</choice>
                    </choices>
                    <info>
                        <p>The navigation can be rendered in a sidebar or menu via CSS.</p>
                        <p>For example, the DITA-OT documentation stylesheet includes the following
                            rules to place the table of contents on the left side of the browser
                            viewport and highlight the current topic in bold:
                            <codeblock>nav[role=toc] {
                                float: left;
                                width: 300px;
                                }
                                
                                nav[role=toc] li.active > a {
                                font-weight: bold;
                                }</codeblock><!-- Use static excerpt pending 2.4 CI builds -->
                        </p>
                    </info>
                </step>
            </steps-unordered>
        </taskbody>
    </task>
</task>
