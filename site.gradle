plugins {
    id 'com.github.eerohele.dita-ot-gradle' version '0.4.2'
    id 'com.github.eerohele.saxon-gradle' version '0.3.0'
}

import com.github.eerohele.SaxonXsltTask

defaultTasks 'dita'

// Use the DITA-OT dir defined by the dita.home system property. If undefined,
// assume we're in dita-ot/docsrc and use the parent directory.
def ditaHome = System.getProperty('dita.home', '../')

// Point DITA-OT Gradle Plugin to the DITA-OT directory.
ditaOt.dir ditaHome

def ditaHomeSrc = project.hasProperty("ditaHomeSrc") ? file("${ditaHomeSrc}") : file("${ditaHome}")
def configDir = "$ditaHomeSrc/config"

def toURI(String directory) {
  new File(directory).toURI().toString()
}

task messages(type: SaxonXsltTask) {
  input "$configDir/messages.xml"
  output "user-guide/DITA-messages.xml"
  stylesheet "resources/messages.xsl"
}

task params(type: SaxonXsltTask) {
  input "$configDir/plugins.xml"
  output "parameters/all-parameters.dita"
  stylesheet "resources/params.xsl"

  parameters("output-dir.url": toURI("parameters"))

  outputs.dir "${projectDir}/parameters"
}

task extensionPoints(type: SaxonXsltTask) {
  input "$configDir/plugins.xml"
  output "extension-points/all-extension-points.dita"
  stylesheet "resources/extension-points.xsl"

  parameters("output-dir.url": toURI("extension-points"))

  outputs.dir "${projectDir}/extension-points"
}

def commit = new ByteArrayOutputStream()

task gitMetadata {
  doLast {
    exec {
        workingDir = "${projectDir}"
        commandLine 'git'
        args = ['rev-parse', 'HEAD']
        standardOutput = commit
    }
  }
}

task generateTopics(dependsOn: ['messages', 'params', 'extensionPoints', 'gitMetadata'])

dita {
    dependsOn 'generateTopics'

    input file('site.ditamap')
    output System.getProperty('output.dir', new File(project.buildDir, 'site').getPath())

    transtype 'org.dita-ot.html'

    properties {
        property name: 'args.gen.task.lbl', value: 'YES'
        property name: 'args.rellinks', value: 'noparent'
        property name: 'commit', value: "${commit}"
    }
}
